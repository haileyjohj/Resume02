---
title:  "[프로그래머스 Lv.2] 주식가격 _ Java"
date:   2019-08-28 16:53:00 +0900
categories: algorithm
tags: programmers java
classes: wide
---

[프로그래머스 코딩테스트연습 스택/큐 주식가격](https://programmers.co.kr/learn/courses/30/lessons/42584)  
  
  
>### 문제설명  
  
  
초 단위로 기록된 주식가격이 담긴 배열 prices가 매개변수로 주어질 때,   
가격이 떨어지지 않은 기간은 몇 초인지를 return 하도록 solution 함수를 완성하세요.  
  
  
#### 제한사항
- prices의 각 가격은 1 이상 10,000 이하인 자연수입니다.  
- prices의 길이는 2 이상 100,000 이하입니다.  
  
  
#### 입출력 예  
| prices | return |  
|:-----------------: |:---------------:|  
| [1, 2, 3, 2, 3] | [4, 3, 1, 1, 0] |   

| prices 	| return 	|  	
|:---------------:  |:---------------:	|
| [1, 2, 3, 2, 3] 	| [4, 3, 1, 1, 0] 	|  

  
#### 입출력 예 설명  
- 1초 시점의 ₩1은 끝까지 가격이 떨어지지 않았습니다.
- 2초 시점의 ₩2은 끝까지 가격이 떨어지지 않았습니다.
- 3초 시점의 ₩3은 1초뒤에 가격이 떨어집니다. 따라서 1초간 가격이 떨어지지 않은 것으로 봅니다.
- 4초 시점의 ₩2은 1초간 가격이 떨어지지 않았습니다.
- 5초 시점의 ₩3은 0초간 가격이 떨어지지 않았습니다.
  
  
>### 풀이  
  
  
처음에는 가격이 하락하는 부분을 놓쳐서 같거나 높을 때만 시간을 추가함.  
테스트 코드는 통과했지만 실 채점에서 실패 발생.  
가격이 하락하는 인덱스를 찾아서 시작하는 인덱스와의 간격을 뺀 후 저장해서 해결.  
  
  
>### 코드  
  
  
```java
import java.util.*;
class Solution {
    public int[] solution(int[] prices) {
        int[] answer = new int[prices.length];
        
        for (int i = 0; i < answer.length; i++) {
            for (int j = i+1; j < answer.length; j++) {
                if (prices[i] > prices[j]) {
                    answer[i] = j-i;
                    break;
                }
                if (j==answer.length-1) answer[i] = j-i;
            }
        }
        return answer;
    }
}
```
