---
title: "[Java] Java 면접 질문"
excerpt:
toc: true
toc_sticky: true
toc_label: "페이지 주요 목차"
date: 2021-07-24 10:53:24 +0900
categories: Java, Interview
tags: Java, Interview
last_modified_at: 2021-07-24 10:53:24 +0900
---

>## Java  

블로그, 도서, 동영상 등 참고하였습니다  

>### OOP

객체지향 프로그래밍이란 인간 중심적 프로그래밍 패러다임.  
현실세계를 프로그래밍으로 옮겨와 프로그래밍 하는 것  

>### 객체지향 설계 원칙의 종류  

1. 단일 책임 원칙 : 클래스는 단 하나의 책임을 가져야하며 변경하는 이유 역시 단 하나의 이유여야함  
1. 개방 폐쇄 원칙 : 확장에는 열려있고 변경 닫혀있어야 함  
1. 리스코프 치환 원칙 : 상위 타입의 객체를 하위 타입의 객체로 치환해도 정상 동작해야함

1. 인터페이스 분리 원칙 : 인터페이스는 그 인터페이스를 사용하는 클라이언트를 기준으로 분리  
1. 의존 역전 원칙 : 고수준 모듈은 저수준 모듈 구현에 의존해서는 안됨  


>### JVM 구조  

1. 프로그램이 실행되면 OS로부터 프로그램이 필요로하는 메모리 할당  
1. 자바 컴파일러를 통해 개발자가 작성한 코드(.java)를 바이트코드(.class)로 변환  
1. Class Loader에서 바이트코드를 JVM에 로딩  
1. 로딩 된 바이트코드를 Execution engine을 통해 기계어로 해석  
1. 해석된 바이트코는 Runtime data areas에 배치되어 수행  

>### JVM의 메모리 구조  

- 메서드 영역(method area)  
프로그램 실행 중 어떤 클래스가 사용되면 해당 클래스파일을 읽어서 분석,
정보를 이 영역에 저장. 클래스변수(class variable)도 함께 생성  


- 힙(heap)  
인스턴스(instance variable)가 생성되는 공간.  


- 호출스택(call stack 또는 execution stack)  
메서드 작업에 필요한 메모리 공간 제공.
메서드가 작업을 수행하는 동안 지역변수(매개변수 포함)들과 연산의 중간결과 등을 저장.  
작업이 종료되면 할당된 메모리 공간은 반환됨.  
따라서 호출스택 제일 상위에 위치한 메서드가 현재 실행 중인 메서드이며, 나머지는 대기상태.  


>### 직렬화(Serialization)  
