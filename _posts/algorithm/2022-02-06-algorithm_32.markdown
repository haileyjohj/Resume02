---
title:  "[알고리즘] 02.Array(1,2차원배열) / 09. 격자판 최대합"
excerpt: "2022-02-06 21:41:24"
last_modified_at:  2022-02-06 21:41:24 +0900
categories: Algorithm
tags:
- Java알고리즘
---

># 격자판 최대합  

### 설명  

5*5 격자판에 아래롸 같이 숫자가 적혀있습니다.  
![](https://cote.inflearn.com/public/upload/4897574b00.jpg)  
N*N의 격자판이 주어지면 각 행의 합, 각 열의 합, 두 대각선의 합 중 가 장 큰 합을 출력합니다.  


### 입력  

첫 줄에 자연수 N이 주어진다.(2<=N<=50)  
두 번째 줄부터 N줄에 걸쳐 각 줄에 N개의 자연수가 주어진다. 각 자연수는 100을 넘지 않는다.  


### 출력  

최대합을 출력합니다.   


예시 입력 1   
```
5
10 13 10 12 15
12 39 30 23 11
11 25 50 53 15
19 27 29 37 27
19 13 30 13 19
```
예시 출력 1  
```
155
```


### 코드  

```java
import java.util.Scanner;
public class JC_0209 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		JC_0209 T = new JC_0209();
		Scanner sc = new Scanner(System.in);
		int num = sc.nextInt();

		int[][] arr = new int[num][num];
		for(int i=0; i<num; i++) {
			for(int j=0; j<num; j++) {
				arr[i][j] = sc.nextInt();
			}
		}
		System.out.print(T.solution(num, arr));
	}


	public int solution(int n, int[][] arr) {
		int maxSum = Integer.MIN_VALUE;
		int sumL =0, sumR =0, sumW, sumH;;

		for(int i=0; i<n; i++) {
			sumW = sumH =0;

			for(int j=0; j<n; j++) {
				sumW += arr[i][j];
				sumH += arr[j][i];
			}
			maxSum = Math.max(maxSum, Math.max(sumW, sumH));

			sumR += arr[i][i];
			sumL += arr[i][n-i-1];
		}
		maxSum = Math.max(maxSum, Math.max(sumR, sumL));
		return maxSum;
	}
}
```
