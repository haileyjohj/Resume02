---
title:  "[Java][프로그래머스 Lv.2] 카펫"
excerpt: 2019-09-05 15:21:24 +0900
last_modified_at:   2019-09-05 15:21:24 +0900
categories: Algorithm
tags:
- programmers
- Java
---

[코딩테스트 연습 완전탐색 카펫](https://programmers.co.kr/learn/courses/30/lessons/42578)  

>## 문제 설명  
  
Leo는 카펫을 사러 갔다가 아래 그림과 같이 중앙에는 빨간색으로 칠해져 있고 모서리는 갈색으로 칠해져 있는 격자 모양 카펫을 봤습니다.  
  
![](https://grepp-programmers.s3.amazonaws.com/files/ybm/7c94563a35/2ff27ac9-97d0-43a9-9cf8-a344b8e7912e.png)  
  
Leo는 집으로 돌아와서 아까 본 카펫의 빨간색과 갈색으로 색칠된 격자의 개수는 기억했지만,  
전체 카펫의 크기는 기억하지 못했습니다.  

Leo가 본 카펫에서 갈색 격자의 수 brown, 빨간색 격자의 수 red가 매개변수로 주어질 때  
카펫의 가로, 세로 크기를 순서대로 배열에 담아 return 하도록 solution 함수를 작성해주세요.
  
  
### 제한사항   
  
- 갈색 격자의 수 brown은 8 이상 5,000 이하인 자연수입니다.  
- 빨간색 격자의 수 red는 1 이상 2,000,000 이하인 자연수입니다.    
- 카펫의 가로 길이는 세로 길이와 같거나, 세로 길이보다 깁니다.  
  
  
### 입출력 예  
  
| brown 	| red 	| return 	|
|-------	|-----	|--------	|
| 10    	| 2   	| [4, 3] 	|
| 8     	| 1   	| [3, 3] 	|
| 24    	| 24  	| [8, 6] 	|
  
  
>## 풀이  
  
공통적으로 반복되는 점을 찾아 해결.  
  
  
>## 코드  
  
```java 
import java.util.*;
class Solution {
    public int[] solution(int brown, int red) {
        int[] answer = new int[2];
        
        //총 개수
        int sum = brown + red;
        
        //가로의 최솟값은 3 (B,R,B)
        for(int i=3; i<=sum; i++){
            if(sum % i == 0){
                int tmp = sum/i; //예상 가로 길이
                
                //brown 범위 빼주기 (가로-2(양옆), 세로-2(위,아래))
                if((tmp - 2) * (i - 2) == red){
                    answer[0] = tmp;
                    answer[1] = i;
                    break;
                }
            }
        }
        return answer;
    }
}
```
